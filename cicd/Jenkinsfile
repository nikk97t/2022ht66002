def version = ""
pipeline {
  agent {
    label "slave-1"
  }
  parameters {
    string(name: 'versionprefix', defaultValue: '1.0.', description: 'Mention version prefix. This will be appended with build number')
  }
  stages {
    stage("Init") {
      steps {
        script {
          version = "${params.versionprefix}.${currentBuild.number}"
          currentBuild.displayName = version

          git branch: '$BRANCH_NAME',
              credentialsId: '14642e87-7795-479b-89b7-4203e3dbf83a',
              url: 'https://github.com/nikk97t/2022ht66002.git'
        }
      }
    }
    stage("Package") {
      steps {
        script {
          sh """
            mkdir ${version} &&
            cp -r -f ./data ./${version}/ &&
            cp -r -f ./ui ./${version}/ &&
            cp -r -f ./Utils ./${version}/ &&
            cp -r -f ./config.json ./${version}/ &&
            cp -r -f ./server.py ./${version}/ &&
            cp -r -f ./cicd/install.py ./${version}/ &&
            zip -r package.zip ./${version}
          """
        }
      }
    }
  }
  post {
    always {
      echo "========always========"
    }
    success {
      echo "========pipeline executed successfully ========"
    }
    failure {
      echo "========pipeline execution failed========"
    }
  }
}